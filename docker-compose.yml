version: '3.8'

services:

  database:
    image: postgres:10-alpine
    hostname: database
    volumes:
      - ./invidious-database:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
      - ./sql:/config/sql
      - ./init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh
    networks:
      - database-backend
    deploy:
      placement:
        constraints:
          - node.labels.database-server == true
      restart_policy:
        condition: any
      update_config:
        parallelism: 2
        delay: 10s
        order: stop-first
        monitor: 10s
      rollback_config:
        parallelism: 2
        delay: 10s
        order: stop-first
        monitor: 10s
    environment:
      POSTGRES_DB: invidious
      POSTGRES_USER: kemal
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}

  server:
    image: quay.io/invidious/invidious:latest
    hostname: invidious
    networks:
      - database-backend
      - backend
#    logging:
#      driver: none
    deploy:
      mode: replicated
      replicas: 6
      restart_policy:
        condition: any
      update_config:
        parallelism: 2
        delay: 10s
        order: stop-first
        monitor: 10s
      rollback_config:
        parallelism: 2
        delay: 10s
        order: stop-first
        monitor: 10s
    environment:
      INVIDIOUS_CONFIG: |
        channel_threads: 1
        feed_threads: 1
        check_tables: true
        db:
          user: kemal
          password: ${DATABASE_PASSWORD}
          host: database
          port: 5432
          dbname: invidious
        default_user_preferences:
          quality: dash
          quality_dash: 720p
        full_refresh: false
        popular_enabled: true
        login_enabled: true
        registration_enabled: true
        statistics_enabled: true
        admin_email: ${ADMIN_MAIL}
        https_only: true
        external_port: 443
        domain: ${INVIDIOUS_HOSTNAME}
        captcha_key: ${ANTI_KEY}
        banner: |
          <a href="https://silkky.cloud/contribute#Donate" target="_blank">Support this instance</a>

  security:
    image: bunkerity/bunkerized-nginx
    hostname: security
    networks: 
      - backend
      - traefik-public
    deploy:
      mode: replicated
      replicas: 6
      restart_policy:
        condition: any
      update_config:
        parallelism: 2
        delay: 10s
        order: stop-first
        monitor: 10s
      rollback_config:
        parallelism: 2
        delay: 10s
        order: stop-first
        monitor: 10s
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"

        # Access Router
        - "traefik.http.routers.invidious.rule=Host(`${INVIDIOUS_HOSTNAME}`)"
        - "traefik.http.routers.invidious.tls.certresolver=letsencrypt"
        - "traefik.http.routers.invidious.entrypoints=websecure"
        - "traefik.http.routers.invidious.service=invidious-service"

        # Service
        - "traefik.http.services.invidious-service.loadbalancer.server.port=8080"
        - "traefik.http.services.invidious-service.loadbalancer.sticky.cookie=true"
        - "traefik.http.services.invidious-service.loadbalancer.sticky.cookie.secure=true"
    environment: 
      - "USE_REVERSE_PROXY=yes"
      - "PROXY_REAL_IP=yes"
      - "REVERSE_PROXY_URL_1=/"
      - "REVERSE_PROXY_HOST=http://invidious:3000/"
      # Antibot
      - "USE_ANTIBOT=javascript"
      # Unblock TOR
      - "BLOCK_TOR_EXIT_NODE=no"

networks:
  traefik-public:
    external: true
  backend:
    driver: overlay
  database-backend:
    driver: overlay
